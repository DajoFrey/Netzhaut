interface Object {
  constructor(optional any value, any newTarget);
  readonly attribute ObjectPrototype prototype;
  object assign(object target, ...sources);
  [NewObject] object create(object? O, Properties);
  object defineProperties(object O, Properties);
  object defineProperty(object O, any P, List Attributes?);
  sequence<any> entries(object O);  
  object freeze(object O);
  object? fromEntries();
  object? getOwnPropertyDescriptor();
  object? getOwnPropertyDescriptions();
  object? getOwnPropertyNames();
  object? getPrototypeOf();
  Boolean is();
  Boolean isExtensible(object O);
  Boolean isFrozen(object O);
  Boolean isSealed(object O);
  sequence<any> keys(object O); 
  object preventExtensions(object O);
  object seal(object O);
  object setPrototypeOf(object O, );
  sequence<any> values(object O);
};
