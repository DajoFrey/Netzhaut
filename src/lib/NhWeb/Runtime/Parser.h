#ifndef NH_WEB_PARSER_H
#define NH_WEB_PARSER_H

#ifndef DOXYGEN_SHOULD_SKIP_THIS

/**
 * Netzhaut - Web Browser Engine
 * Copyright (C) 2020  Dajo Frey
 * Published under LGPLv3
 */

#include "Tokenizer.h"

#include "../Common/Result.h"

#include "../../NhCore/List.h"
#include "../../NhCore/String.h"

#endif

/** @addtogroup NhWebEnums
 *  @{
 */

    typedef enum NH_WEB_PARSE_NODE {
        NH_WEB_PARSE_NODE_DEFINITIONS,
        NH_WEB_PARSE_NODE_DEFINITION,
        NH_WEB_PARSE_NODE_ARGUMENT_NAME_KEYWORD,
        NH_WEB_PARSE_NODE_CALLBACK_OR_CLASS_OR_MIXIN,
        NH_WEB_PARSE_NODE_CLASS_OR_MIXIN,
        NH_WEB_PARSE_NODE_CLASS_REST,
        NH_WEB_PARSE_NODE_PARTIAL,
        NH_WEB_PARSE_NODE_PARTIAL_DEFINITION,
        NH_WEB_PARSE_NODE_PARTIAL_CLASS_OR_PARTIAL_MIXIN,
        NH_WEB_PARSE_NODE_PARTIAL_CLASS_REST,
        NH_WEB_PARSE_NODE_CLASS_MEMBERS,
        NH_WEB_PARSE_NODE_CLASS_MEMBER,
        NH_WEB_PARSE_NODE_PARTIAL_CLASS_MEMBERS,
        NH_WEB_PARSE_NODE_PARTIAL_CLASS_MEMBER,
        NH_WEB_PARSE_NODE_INHERITANCE,
        NH_WEB_PARSE_NODE_MIXIN_REST,
        NH_WEB_PARSE_NODE_MIXIN_MEMBERS,
        NH_WEB_PARSE_NODE_MIXIN_MEMBER,
        NH_WEB_PARSE_NODE_INCLUDES_STATEMENT,
        NH_WEB_PARSE_NODE_CALLBACK_REST_OR_CLASS,
        NH_WEB_PARSE_NODE_CALLBACK_CLASS_MEMBERS,
        NH_WEB_PARSE_NODE_CALLBACK_CLASS_MEMBER,
        NH_WEB_PARSE_NODE_CONST,
        NH_WEB_PARSE_NODE_CONST_VALUE,
        NH_WEB_PARSE_NODE_BOOLEAN_LITERAL,
        NH_WEB_PARSE_NODE_FLOAT_LITERAL,
        NH_WEB_PARSE_NODE_CONST_TYPE,
        NH_WEB_PARSE_NODE_READ_ONLY_MEMBER,
        NH_WEB_PARSE_NODE_READ_ONLY_MEMBER_REST,
        NH_WEB_PARSE_NODE_READ_WRITE_ATTRIBUTE,
        NH_WEB_PARSE_NODE_INHERIT_ATTRIBUTE,
        NH_WEB_PARSE_NODE_PRIVATE_ATTRIBUTE,
        NH_WEB_PARSE_NODE_ATTRIBUTE_REST,
        NH_WEB_PARSE_NODE_ATTRIBUTE_NAME,
        NH_WEB_PARSE_NODE_ATTRIBUTE_NAME_KEYWORD,
        NH_WEB_PARSE_NODE_OPTIONAL_READ_ONLY,
        NH_WEB_PARSE_NODE_DEFAULT_VALUE,
        NH_WEB_PARSE_NODE_OPERATION,
        NH_WEB_PARSE_NODE_REGULAR_OPERATION,
        NH_WEB_PARSE_NODE_SPECIAL_OPERATION,
        NH_WEB_PARSE_NODE_SPECIAL,
        NH_WEB_PARSE_NODE_OPERATION_REST,
        NH_WEB_PARSE_NODE_OPTIONAL_OPERATION_NAME,
        NH_WEB_PARSE_NODE_OPERATION_NAME,
        NH_WEB_PARSE_NODE_OPERATION_NAME_KEYWORD,
        NH_WEB_PARSE_NODE_ARGUMENT_LIST,
        NH_WEB_PARSE_NODE_ARGUMENTS,
        NH_WEB_PARSE_NODE_ARGUMENT,
        NH_WEB_PARSE_NODE_ARGUMENT_REST,
        NH_WEB_PARSE_NODE_ARGUMENT_NAME,
        NH_WEB_PARSE_NODE_ELLIPSIS,
        NH_WEB_PARSE_NODE_CONSTRUCTOR,
        NH_WEB_PARSE_NODE_STRINGIFIER,
        NH_WEB_PARSE_NODE_STRINGIFIER_REST,
        NH_WEB_PARSE_NODE_STATIC_MEMBER,
        NH_WEB_PARSE_NODE_STATIC_MEMBER_REST,
        NH_WEB_PARSE_NODE_ITERABLE,
        NH_WEB_PARSE_NODE_OPTIONAL_TYPE,
        NH_WEB_PARSE_NODE_ASYNC_ITERABLE,
        NH_WEB_PARSE_NODE_OPTIONAL_ARGUMENT_LIST,
        NH_WEB_PARSE_NODE_READ_WRITE_MAPLIKE,
        NH_WEB_PARSE_NODE_MAPLIKE_REST,
        NH_WEB_PARSE_NODE_READ_WRITE_SETLIKE,
        NH_WEB_PARSE_NODE_SETLIKE_REST,
        NH_WEB_PARSE_NODE_NAMESPACE,
        NH_WEB_PARSE_NODE_NAMESPACE_MEMBERS,
        NH_WEB_PARSE_NODE_NAMESPACE_MEMBER,
        NH_WEB_PARSE_NODE_DICTIONARY,
        NH_WEB_PARSE_NODE_DICTIONARY_MEMBERS,
        NH_WEB_PARSE_NODE_DICTIONARY_MEMBER,
        NH_WEB_PARSE_NODE_DICTIONARY_MEMBERREST,
        NH_WEB_PARSE_NODE_PARTIAL_DICTIONARY,
        NH_WEB_PARSE_NODE_DEFAULT,
        NH_WEB_PARSE_NODE_ENUM,
        NH_WEB_PARSE_NODE_ENUM_VALUE_LIST,
        NH_WEB_PARSE_NODE_ENUM_VALUE_LIST_COMMA,
        NH_WEB_PARSE_NODE_ENUM_VALUE_LIST_STRING,
        NH_WEB_PARSE_NODE_CALLBACK_REST,
        NH_WEB_PARSE_NODE_TYPEDEF,
        NH_WEB_PARSE_NODE_TYPE,
        NH_WEB_PARSE_NODE_TYPE_WITH_EXTENDED_ATTRIBUTES,
        NH_WEB_PARSE_NODE_SINGLE_TYPE,
        NH_WEB_PARSE_NODE_UNION_TYPE,
        NH_WEB_PARSE_NODE_UNION_MEMBER_TYPE,
        NH_WEB_PARSE_NODE_UNION_MEMBER_TYPES,
        NH_WEB_PARSE_NODE_DISTINGUISHABLE_TYPE,
        NH_WEB_PARSE_NODE_PRIMITIVE_TYPE,
        NH_WEB_PARSE_NODE_UNRESTRICTED_FLOAT_TYPE,
        NH_WEB_PARSE_NODE_FLOAT_TYPE,
        NH_WEB_PARSE_NODE_UNSIGNED_INTEGER_TYPE,
        NH_WEB_PARSE_NODE_INTEGER_TYPE,
        NH_WEB_PARSE_NODE_OPTIONAL_LONG,
        NH_WEB_PARSE_NODE_STRING_TYPE,
        NH_WEB_PARSE_NODE_PROMISE_TYPE,
        NH_WEB_PARSE_NODE_RECORD_TYPE,
        NH_WEB_PARSE_NODE_NULL,
        NH_WEB_PARSE_NODE_BUFFER_RELATED_TYPE,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_LIST,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTES,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_REST,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_INNER,
        NH_WEB_PARSE_NODE_OTHER,
        NH_WEB_PARSE_NODE_OTHER_OR_COMMA,
        NH_WEB_PARSE_NODE_IDENTIFIER_LIST,
        NH_WEB_PARSE_NODE_IDENTIFIERS,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_NO_ARGS,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_ARG_LIST,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_IDENT,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_IDENT_LIST,
        NH_WEB_PARSE_NODE_EXTENDED_ATTRIBUTE_NAMED_ARG_LIST,
    } NH_WEB_PARSE_NODE;

/** @} */

/** @addtogroup NhWebStructs
 *  @{
 */

    typedef struct Nh_Web_ParseNode {
        NH_WEB_PARSE_NODE type;
        Nh_Web_Token *Token_p;
        Nh_List Children;
    } Nh_Web_ParseNode;

    typedef struct Nh_Web_FragmentParseResult {
        Nh_Web_ParseNode *Root_p;
        Nh_Array Tokens;
        Nh_List SyntaxErrors;
    } Nh_Web_FragmentParseResult;

/** @} */

/** @addtogroup NhWebTypedefs
 *  @{
 */

    typedef Nh_Web_FragmentParseResult (*Nh_Web_parse_f)(
        NH_BYTE *logName_p, NH_BYTE *fragment_p
    );

    typedef void (*Nh_Web_unparse_f)(
        Nh_Web_FragmentParseResult ParseResult
    );

/** @} */

/** @addtogroup NhWebVars
 *  @{
 */

    extern const NH_BYTE *NH_WEB_PARSE_NODE_NAMES_PP[];
    extern size_t NH_WEB_PARSE_NODE_NAMES_PP_COUNT;

/** @} */

/** @addtogroup NhWebFunctions
 *  @{
 */

    Nh_Web_FragmentParseResult Nh_Web_initFragmentParseResult(
    );

    Nh_Web_FragmentParseResult Nh_Web_parse(
        NH_BYTE *logName_p, NH_BYTE *fragment_p
    );

    void Nh_Web_unparse(
        Nh_Web_FragmentParseResult ParseResult
    );

    NH_WEB_RESULT Nh_Web_getParseNodes(
        Nh_Web_ParseNode *Node_p, NH_WEB_PARSE_NODE type, Nh_List *Nodes_p
    );

/** @} */

#endif
