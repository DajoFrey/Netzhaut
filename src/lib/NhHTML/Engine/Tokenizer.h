#ifndef NH_HTML_TOKENIZER_H
#define NH_HTML_TOKENIZER_H

#ifndef DOXYGEN_SHOULD_SKIP_THIS

/**
 * Netzhaut - Web Browser Engine
 * Copyright (C) 2020  Dajo Frey
 * Published under LGPLv3
 */

#endif

/** @addtogroup NhHTMLEnums
 *  @{
 */

    typedef enum NH_HTML_TOKENIZATION_STATE {
        NH_HTML_TOKENIZATION_STATE_DATA, 
        NH_HTML_TOKENIZATION_STATE_RCDATA, 
        NH_HTML_TOKENIZATION_STATE_RAWTEXT,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA,
        NH_HTML_TOKENIZATION_STATE_PLAINTEXT,
        NH_HTML_TOKENIZATION_STATE_TAG_OPEN,
        NH_HTML_TOKENIZATION_STATE_END_TAG_OPEN,
        NH_HTML_TOKENIZATION_STATE_TAG_NAME,
        NH_HTML_TOKENIZATION_STATE_RCDATA_LESS_THAN_SIGN,
        NH_HTML_TOKENIZATION_STATE_RCDATA_END_TAG_OPEN,
        NH_HTML_TOKENIZATION_STATE_RCDATA_END_TAG_NAME,
        NH_HTML_TOKENIZATION_STATE_RAWTEXT_LESS_THAN_SIGN,
        NH_HTML_TOKENIZATION_STATE_RAWTEXT_END_TAG_OPEN,
        NH_HTML_TOKENIZATION_STATE_RAWTEXT_END_TAG_NAME,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_LESS_THAN_SIGN,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_END_TAG_OPEN,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_END_TAG_NAME,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPE_START,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPE_START_DASH,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPED,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPED_DASH,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPED_DASH_DASH, 
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPED_END_TAG_OPEN,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_ESCAPED_END_TAG_NAME,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_DOUBLE_ESCAPE_START,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_DOUBLE_ESCAPED,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_DOUBLE_ESCAPED_DASH,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN,
        NH_HTML_TOKENIZATION_STATE_SCRIPT_DATA_DOUBLE_ESCAPE_END,
        NH_HTML_TOKENIZATION_STATE_BEFORE_ATTRIBUTE_NAME,
        NH_HTML_TOKENIZATION_STATE_ATTRIBUTE_NAME,
        NH_HTML_TOKENIZATION_STATE_AFTER_ATTRIBUTE_NAME,
        NH_HTML_TOKENIZATION_STATE_BEFORE_ATTRIBUTE_VALUE,
        NH_HTML_TOKENIZATION_STATE_ATTRIBUTE_VALUE_DOUBLE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_ATTRIBUTE_VALUE_SINGLE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_ATTRIBUTE_VALUE_UNQUOTED,
        NH_HTML_TOKENIZATION_STATE_AFTER_ATTRIBUTE_VALUE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_SELF_CLOSING_START_TAG,
        NH_HTML_TOKENIZATION_STATE_BOGUS_COMMENT,
        NH_HTML_TOKENIZATION_STATE_MARKUP_DECLARATION_OPEN,
        NH_HTML_TOKENIZATION_STATE_COMMENT_START,
        NH_HTML_TOKENIZATION_STATE_COMMENT_START_DASH,
        NH_HTML_TOKENIZATION_STATE_COMMENT,
        NH_HTML_TOKENIZATION_STATE_COMMENT_LESS_THAN_SIGN,
        NH_HTML_TOKENIZATION_STATE_COMMENT_LESS_THAN_SIGN_BANG,
        NH_HTML_TOKENIZATION_STATE_COMMENT_LESS_THAN_SIGN_BANG_DASH,
        NH_HTML_TOKENIZATION_STATE_COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH,
        NH_HTML_TOKENIZATION_STATE_COMMENT_END_DASH,
        NH_HTML_TOKENIZATION_STATE_COMMENT_END,
        NH_HTML_TOKENIZATION_STATE_COMMENT_END_BANG,
        NH_HTML_TOKENIZATION_STATE_DOCTYPE,
        NH_HTML_TOKENIZATION_STATE_BEFORE_DOCTYPE_NAME,
        NH_HTML_TOKENIZATION_STATE_DOCTYPE_NAME,
        NH_HTML_TOKENIZATION_STATE_AFTER_DOCTYPE_NAME,
        NH_HTML_TOKENIZATION_STATE_AFTER_DOCTYPE_PUBLIC_KEYWORD,
        NH_HTML_TOKENIZATION_STATE_BEFORE_DOCTYPE_PUBLIC_IDENTIFIER,
        NH_HTML_TOKENIZATION_STATE_DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_AFTER_DOCTYPE_PUBLIC_IDENTIFIER,
        NH_HTML_TOKENIZATION_STATE_BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS,
        NH_HTML_TOKENIZATION_STATE_AFTER_DOCTYPE_SYSTEM_KEYWORD,
        NH_HTML_TOKENIZATION_STATE_BEFORE_DOCTYPE_SYSTEM_IDENTIFIER,
        NH_HTML_TOKENIZATION_STATE_DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED,
        NH_HTML_TOKENIZATION_STATE_AFTER_DOCTYPE_SYSTEM_IDENTIFIER,
        NH_HTML_TOKENIZATION_STATE_BOGUS_DOCTYPE,
        NH_HTML_TOKENIZATION_STATE_CDATA_SECTION,
        NH_HTML_TOKENIZATION_STATE_CDATA_SECTION_BRACKET,
        NH_HTML_TOKENIZATION_STATE_CDATA_SECTION_END,
        NH_HTML_TOKENIZATION_STATE_CHARACTER_REFERENCE,
        NH_HTML_TOKENIZATION_STATE_NAMED_CHARACTER_REFERENCE,
        NH_HTML_TOKENIZATION_STATE_AMBIGUOUS_AMPERSAND,
        NH_HTML_TOKENIZATION_STATE_NUMERIC_CHARACTER_REFERENCE,
        NH_HTML_TOKENIZATION_STATE_HEXADECIMAL_CHARACTER_REFERENCE_START,
        NH_HTML_TOKENIZATION_STATE_DECIMAL_CHARACTER_REFERENCE_START,
        NH_HTML_TOKENIZATION_STATE_HEXADECIMAL_CHARACTER_REFERENCE,
        NH_HTML_TOKENIZATION_STATE_DECIMAL_CHARACTER_REFERENCE,
        NH_HTML_TOKENIZATION_STATE_NUMERIC_CHARACTER_REFERENCE_END,
    } NH_HTML_TOKENIZATION_STATE;

    typedef enum NH_HTML_TOKEN {
        NH_HTML_TOKEN_DOCTYPE, 
        NH_HTML_TOKEN_START_TAG, 
        NH_HTML_TOKEN_END_TAG, 
        NH_HTML_TOKEN_COMMENT, 
        NH_HTML_TOKEN_CHARACTER, 
        NH_HTML_TOKEN_END_OF_FILE,
    } NH_HTML_TOKEN;

/** @} */

/** @addtogroup NhHTMLStructs
 *  @{
 */

    typedef struct Nh_HTML_DOCTYPEToken {
        NH_HTML_TOKEN type;
        NH_UNICODE_CODEPOINT *name_p;
        NH_UNICODE_CODEPOINT *publicIdentifier_p;
        NH_UNICODE_CODEPOINT *systemIdentifier_p;
        NH_BOOL forceQuirks;
    } Nh_HTML_DOCTYPEToken;

    typedef struct Nh_HTML_StartOrEndTagToken {
        NH_HTML_TOKEN type;
        NH_UNICODE_CODEPOINT *tagName_p;
        NH_BOOL selfClosing;
        Nh_Array Attributes;
    } Nh_HTML_StartOrEndTagToken;

    typedef struct Nh_HTML_CommentOrCharacterToken {
        NH_HTML_TOKEN type;
        NH_UNICODE_CODEPOINT *data_p;
        unsigned int length;
    } Nh_HTML_CommentOrCharacterToken;

    typedef union Nh_HTML_Token {
        NH_HTML_TOKEN type;
        Nh_HTML_DOCTYPEToken DOCTYPE;
        Nh_HTML_StartOrEndTagToken StartOrEndTag;
        Nh_HTML_CommentOrCharacterToken CommentOrCharacter;
    } Nh_HTML_Token;

    typedef struct Nh_HTML_Tokenizer {
        NH_HTML_TOKENIZATION_STATE state;
        NH_HTML_TOKENIZATION_STATE returnState;
    } Nh_HTML_Tokenizer;

/** @} */

/** @addtogroup NhHTMLFunctions
 *  @{
 */

    Nh_HTML_Tokenizer Nh_HTML_initTokenizer(
    );

    Nh_Array Nh_HTML_tokenize(
        Nh_HTML_Tokenizer *Tokenizer_p, NH_UNICODE_CODEPOINT *codepoints_p, unsigned int length
    );

/** @} */

#endif
